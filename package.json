{
	"name": "gradeFast VSCODE EXTENSION",
	"displayName": "gradeFast",
	"description": "gradeFast Bellevue College",
	"version": "0.0.1",
	"publisher": "gradeFast",
	"private": true,
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/vscode-extension-samples"
	},
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:json",
		"onLanguage:jsonc",
		"onView:gradefast-home"
	],
	"main": "./out/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "package-explorer",
					"title": "GradeFast",
					"icon": "media/logo.svg"
				},
				{
          "id": "gradefast",
          "title": "GradeFast",
          "icon": "media/logo.png"
        }
			]
		},
		"views": {
			"gradefast":[
        {
          "id": "gradefast-home",
          "name": "Home",
					"type": "tree"
        },
        {
          "id": "gradefast-section",
          "name": "Section"
        }
      ],
			"package-explorer": [
				{
					"id": "nodeDependencies",
					"name": "Node Dependencies",
					"icon": "media/logo.svg",
					"contextualTitle": "GradeFast"
				}
			],
			"explorer": [
			]
		},
		"viewsWelcome": [
			{
				"view": "gradefast-home",
				"contents": "Open a student's assignment directory to begin grading. \n[Pick a folder](command:workbench.action.files.openFolder)"
			}
		],
		"commands": [
			{
				"command": "mywiki.editNote",
				"title": "Edit",
				"icon": {
					"dark": "resources/edit_inverse.svg",
					"light": "resources/edit.svg"
				}
			},
			{
				"command": "mywiki.saveNote",
				"title": "Save"
			},
			{
				"command": "mywiki.cancelsaveNote",
				"title": "Cancel"
			},
			{
				"command": "mywiki.createNote",
				"title": "Create Note",
				"enablement": "!commentIsEmpty"
			},
			{
				"command": "mywiki.deleteNote",
				"title": "Delete",
				"icon": {
					"dark": "resources/close_inverse.svg",
					"light": "resources/close.svg"
				}
			},
			{
				"command": "extension.findCapitalizedPrimitiveTypes",
				"title": "findCapitalizedPrimitiveTypes"
			},
			{
				"command": "extension.findLowercaseClassOrInterface",
				"title": "findLowercaseClassOrInterface"
			},
			{
			    "command": "extension.findCapitalizedMethodName",
				"title": "findCapitalizedMethodName"
			},
			{
			    "command": "extension.singleStatementPerLineChecker",
				"title": "singleStatementPerLineChecker"
			},
			{
                "command": "extension.findAllErrors",
                "title": "findAllErrors"
            },
			{
				"command": "extension.findConstantCap",
                "title": "findConstantCap"
			},
			{
				"command": "extension.findLowercaseEnums",
				"title": "findLowercaseEnums"
			}, 
			{
				"command": "extension.findDuplicateCode",
				"title": "findDuplicateCode"
			},
			{
				"command": "extension.longMethod",
				"title": "findLongMethod"
			},
			{
				"command": "extension.longParameters",
				"title": "findLongParameters"
			},
			{
				"command": "extension.createJSON",
				"title": "createJSON"
			},
			{
				"command": "extension.badSwitch",
				"title": "badSwitch"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "mywiki.createNote",
					"when": "false"
				},
				{
					"command": "mywiki.deleteNote",
					"when": "false"
				}
			],
			"view/title": [
			],
			"view/item/context": [
			],
			"comments/comment/context": [
				{
					"command": "mywiki.cancelsaveNote",
					"group": "inline@1",
					"when": "commentController == comment-sample"
				},
				{
					"command": "mywiki.saveNote",
					"group": "inline@2",
					"when": "commentController == comment-sample"
				}
			],
			"comments/commentThread/context": [
				{
					"command": "mywiki.createNote",
					"group": "inline",
					"when": "commentController == comment-sample && commentThreadIsEmpty"
				}
			],
			"comments/comment/title": [
				{
					"command": "mywiki.editNote",
					"group": "group@1",
					"when": "commentController == comment-sample"
				}
			],
			"comments/commentThread/title": [
				{
					"command": "mywiki.deleteNote",
					"group": "navigation",
					"when": "commentController == comment-sample && !commentThreadIsEmpty"
				}
			]
		},
		"configuration": [
			{
				"title": "JSON Outline",
				"properties": {
					"jsonOutline.autorefresh": {
						"type": "boolean",
						"default": false
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"lint": "eslint \"src/**/*.ts\""
	},
	"devDependencies": {
		"@types/ftp": "^0.3.33",
		"@types/mkdirp": "^0.5.2",
		"@types/node": "^16.18.34",
		"@types/rimraf": "^2.0.2",
		"@types/vscode": "^1.73.0",
		"@typescript-eslint/eslint-plugin": "^6.7.0",
		"@typescript-eslint/parser": "^6.7.0",
		"eslint": "^8.26.0",
		"typescript": "^5.3.2"
	},
	"dependencies": {
		"ftp": "^0.3.10",
		"jsonc-parser": "^0.4.2",
		"minimist": "^1.2.6",
		"mkdirp": "^0.5.1",
		"rimraf": "^2.6.2"
	}
}
